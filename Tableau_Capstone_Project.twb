<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Total_Revenue' caption='KPI List: ' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total_Revenue&quot;'>
        <calculation class='tableau' formula='&quot;Total_Revenue&quot;' />
        <aliases>
          <alias key='&quot;MB of Usage&quot;' value='MB of Usage' />
          <alias key='&quot;Minutes of Usage&quot;' value='Minutes of Usage' />
          <alias key='&quot;Off-net Minutes of Usage&quot;' value='Off-net Minutes of Usage' />
          <alias key='&quot;On-net Minutes of Usage&quot;' value='On-net Minutes of Usage' />
          <alias key='&quot;Total_Revenue&quot;' value='Total_Revenue' />
        </aliases>
        <members>
          <member alias='Total_Revenue' value='&quot;Total_Revenue&quot;' />
          <member alias='Minutes of Usage' value='&quot;Minutes of Usage&quot;' />
          <member alias='On-net Minutes of Usage' value='&quot;On-net Minutes of Usage&quot;' />
          <member alias='Off-net Minutes of Usage' value='&quot;Off-net Minutes of Usage&quot;' />
          <member alias='MB of Usage' value='&quot;MB of Usage&quot;' />
        </members>
      </column>
      <column alias='Average Data Revenue Per Subscriber' caption='Subscriber' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='3'>
        <calculation class='tableau' formula='3' />
        <aliases>
          <alias key='1' value='Average Revenue Per Subscriber' />
          <alias key='2' value='Average Voice Revenue Per Subscriber' />
          <alias key='3' value='Average Data Revenue Per Subscriber' />
          <alias key='4' value='Average On-net Revenue Per Subscriber' />
          <alias key='5' value='Average Off-net Revenue Per Subscriber' />
        </aliases>
        <members>
          <member alias='Average Revenue Per Subscriber' value='1' />
          <member alias='Average Voice Revenue Per Subscriber' value='2' />
          <member alias='Average Data Revenue Per Subscriber' value='3' />
          <member alias='Average On-net Revenue Per Subscriber' value='4' />
          <member alias='Average Off-net Revenue Per Subscriber' value='5' />
        </members>
      </column>
    </datasource>
    <datasource caption='Data+ (Performance Analysis (1))' inline='true' name='federated.1nslhmd1v3kd741h8m3xk0w0nakk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Performance Analysis (1)' name='excel-direct.0hjn0oh1aocaf2197zy9m1jphca8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/mirhu/Downloads/Performance Analysis (1).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Data].[Tariff_Id]' />
              <expression op='[Tariff].[ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0hjn0oh1aocaf2197zy9m1jphca8' name='Data' table='[Data$]' type='table'>
            <columns gridOrigin='A1:M6929:no:A1:M6929:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='integer' name='Tariff_Id' ordinal='1' />
              <column datatype='integer' name='Number of Revenue Subscribers' ordinal='2' />
              <column datatype='integer' name='Number of Voice Subscribers' ordinal='3' />
              <column datatype='integer' name='Data Revenue' ordinal='4' />
              <column datatype='integer' name='Number of Data subscribers' ordinal='5' />
              <column datatype='integer' name='MB of Usage' ordinal='6' />
              <column datatype='integer' name='OnNet Revenue' ordinal='7' />
              <column datatype='integer' name='Number of OnNet Subscribers' ordinal='8' />
              <column datatype='integer' name='OnNet Minutes of Usage' ordinal='9' />
              <column datatype='integer' name='OffNet Revenue' ordinal='10' />
              <column datatype='integer' name='Number of OffNet Subscribers' ordinal='11' />
              <column datatype='integer' name='OffNet Minutes of Usage' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.0hjn0oh1aocaf2197zy9m1jphca8' name='Tariff' table='[Tariff$]' type='table'>
            <columns gridOrigin='A1:B17:no:A1:B17:0' header='yes' outcome='6'>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tariff_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tariff_Id]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Tariff_Id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Revenue Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Revenue Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Revenue Subscribers</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Voice Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Voice Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Voice Subscribers</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Data Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Data Revenue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Data subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Data subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of Data subscribers</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MB of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MB of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>MB of Usage</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OnNet Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OnNet Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OnNet Revenue</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of OnNet Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of OnNet Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of OnNet Subscribers</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OnNet Minutes of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OnNet Minutes of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OnNet Minutes of Usage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OffNet Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OffNet Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OffNet Revenue</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of OffNet Subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of OffNet Subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of OffNet Subscribers</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OffNet Minutes of Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OffNet Minutes of Usage]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>OffNet Minutes of Usage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M6929:no:A1:M6929:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Tariff]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Tariff]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tariff]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B17:no:A1:B17:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total_Revenue' datatype='integer' name='[Calculation_1867867975417044992]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue] + [Data Revenue]' />
      </column>
      <column caption='Voice Revenue' datatype='integer' name='[Calculation_1867867975419465729]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue]' />
      </column>
      <column caption='KPI' datatype='integer' name='[Calculation_1867867975438581762]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1] == &apos;Total_Revenue&apos;&#13;&#10;    THEN [Calculation_1867867975417044992]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;Minutes of Usage&apos;&#13;&#10;    THEN [Calculation_1867867975419465729]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;On-net Minutes of Usage&apos;&#13;&#10;    then [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;Off-net Minutes of Usage&apos;&#13;&#10;    then [OffNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;MB of Usage&apos;&#13;&#10;    then [MB of Usage]&#13;&#10;END' />
      </column>
      <column caption='Growth_Rate' datatype='real' name='[Calculation_1867867975834374148]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND((SUM([Calculation_1867867975438581762]) - LOOKUP(SUM([Calculation_1867867975438581762]), -1)) / ABS(LOOKUP(SUM([Calculation_1867867975438581762]), -1)) * 100, 2)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Average Revenue Per Subscriber ' datatype='real' name='[Calculation_1867867976150171655]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1867867975417044992]/ ([Number of OffNet Subscribers] + [Number of OnNet Subscribers] )' />
      </column>
      <column caption='Average Voice Revenue Per Subscriber' datatype='real' name='[Calculation_1867867976151027720]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1867867975419465729] / [Number of Voice Subscribers]' />
      </column>
      <column caption='Average Data Revenue Per Subscriber' datatype='real' name='[Calculation_1867867976151552009]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data Revenue]/[Number of Data subscribers]' />
      </column>
      <column caption='Average On-net Revenue Per Subscriber' datatype='real' name='[Calculation_1867867976151715850]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OnNet Revenue]/[Number of OnNet Subscribers]' />
      </column>
      <column caption='Average Off-net Revenue Per Subscriber ' datatype='real' name='[Calculation_1867867976151801867]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[OffNet Revenue] / [Number of OffNet Subscribers]' />
      </column>
      <column caption='Revenue' datatype='real' name='[Calculation_1867867976467501068]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 2] == 1&#13;&#10;    THEN [Calculation_1867867976150171655]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == 2&#13;&#10;    THEN [Calculation_1867867976151027720]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == 3&#13;&#10;    then [Calculation_1867867976151552009]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == 4&#13;&#10;    then [Calculation_1867867976151715850]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == 5&#13;&#10;    then [Calculation_1867867976151801867]&#13;&#10;END' />
      </column>
      <column caption='Propotion' datatype='real' name='[Calculation_1867867976471527438]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Data Revenue] / [Calculation_1867867975417044992] * 100' />
      </column>
      <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' hidden='true' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
      <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
      <column caption='TEXT (copy)' datatype='string' name='[TEXT (copy)_1867867976655167506]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Calculation_1867867975438581762]) - LOOKUP(SUM([Calculation_1867867975438581762]), -1) &gt; 0 THEN&#13;&#10;        &apos;Good news!!! &apos; + STR([Parameters].[Parameter 1]) +&apos; increased &apos; + STR(ROUND((SUM([Calculation_1867867975438581762]) - LOOKUP(SUM([Calculation_1867867975438581762]), -1)) / ABS(LOOKUP(SUM([Calculation_1867867975438581762]), -1)) * 100, 2)) + &apos;% in the last week.&apos;&#13;&#10;ELSE&#13;&#10;        &apos;ALARM!!! &apos;+ STR([Parameters].[Parameter 1]) + &apos; decreased &apos; + STR(ROUND(ABS(SUM([Calculation_1867867975438581762]) - LOOKUP(SUM([Calculation_1867867975438581762]), -1)) / ABS(LOOKUP(SUM([Calculation_1867867975438581762]), -1)) * 100, 2)) + &apos;% in the last week.&apos;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Tariff Id' datatype='integer' name='[Tariff_Id]' role='dimension' type='ordinal' />
      <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk:11]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[Name]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='ColumnInPane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk:8]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Pane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk:9]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Pane' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Data Revenue]' derivation='Sum' name='[pcrk:sum:Data Revenue:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1867867975419465729]' derivation='Sum' name='[sum:Calculation_1867867975419465729:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OffNet Revenue]' derivation='Sum' name='[sum:OffNet Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OnNet Revenue]' derivation='Sum' name='[sum:OnNet Revenue:qk]' pivot='key' type='quantitative' />
      <group caption='Tooltip (Name)' hidden='true' name='[Tooltip (Name)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Name]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.224138' measure-ordering='alphabetic' measure-percentage='0.701149' parameter-percentage='0.0747126' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[pcdf:sum:Data Revenue:qk:11]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[pcdf:sum:Data Revenue:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[pcdf:sum:Data Revenue:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[pcdf:sum:Data Revenue:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[pcdf:sum:Data Revenue:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[pcdf:sum:Data Revenue:qk:8]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[pcdf:sum:Data Revenue:qk:9]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[pcdf:sum:Data Revenue:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[pcrk:sum:Data Revenue:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Data Revenue:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:OnNet Revenue:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:OffNet Revenue:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975419465729:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Name:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Tariff 9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tariff 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tariff 5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tariff 13&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tariff 10&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tariff 6&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tariff 2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tariff 7&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tariff 14&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tariff 15&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tariff 11&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tariff 8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tariff 3&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tariff 16&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tariff 12&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tariff 4&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Total_Revenue' caption='KPI List: ' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total_Revenue&quot;'>
          <calculation class='tableau' formula='&quot;Total_Revenue&quot;' />
          <aliases>
            <alias key='&quot;MB of Usage&quot;' value='MB of Usage' />
            <alias key='&quot;Minutes of Usage&quot;' value='Minutes of Usage' />
            <alias key='&quot;Off-net Minutes of Usage&quot;' value='Off-net Minutes of Usage' />
            <alias key='&quot;On-net Minutes of Usage&quot;' value='On-net Minutes of Usage' />
            <alias key='&quot;Total_Revenue&quot;' value='Total_Revenue' />
          </aliases>
        </column>
        <column alias='Average Data Revenue Per Subscriber' caption='Subscriber' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='3'>
          <calculation class='tableau' formula='3' />
          <aliases>
            <alias key='1' value='Average Revenue Per Subscriber' />
            <alias key='2' value='Average Voice Revenue Per Subscriber' />
            <alias key='3' value='Average Data Revenue Per Subscriber' />
            <alias key='4' value='Average On-net Revenue Per Subscriber' />
            <alias key='5' value='Average Off-net Revenue Per Subscriber' />
          </aliases>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='KPI 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Times New Roman'>Weekly time plot of each KPI</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (1))' name='federated.1nslhmd1v3kd741h8m3xk0w0nakk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Total_Revenue' caption='KPI List: ' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total_Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Total_Revenue&quot;' />
              <aliases>
                <alias key='&quot;MB of Usage&quot;' value='MB of Usage' />
                <alias key='&quot;Minutes of Usage&quot;' value='Minutes of Usage' />
                <alias key='&quot;Off-net Minutes of Usage&quot;' value='Off-net Minutes of Usage' />
                <alias key='&quot;On-net Minutes of Usage&quot;' value='On-net Minutes of Usage' />
                <alias key='&quot;Total_Revenue&quot;' value='Total_Revenue' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nslhmd1v3kd741h8m3xk0w0nakk'>
            <column caption='Total_Revenue' datatype='integer' name='[Calculation_1867867975417044992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue] + [Data Revenue]' />
            </column>
            <column caption='Voice Revenue' datatype='integer' name='[Calculation_1867867975419465729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue]' />
            </column>
            <column caption='KPI' datatype='integer' name='[Calculation_1867867975438581762]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == &apos;Total_Revenue&apos;&#13;&#10;    THEN [Calculation_1867867975417044992]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;Minutes of Usage&apos;&#13;&#10;    THEN [Calculation_1867867975419465729]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;On-net Minutes of Usage&apos;&#13;&#10;    then [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;Off-net Minutes of Usage&apos;&#13;&#10;    then [OffNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;MB of Usage&apos;&#13;&#10;    then [MB of Usage]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1867867975438581762]' derivation='Sum' name='[sum:Calculation_1867867975438581762:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975438581762:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[wk:Date:ok]' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[wk:Date:ok]' value='iw' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975438581762:qk]' palette='gray_warm_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#00000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#e7d0d0' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975438581762:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975438581762:qk]</rows>
        <cols>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[wk:Date:ok]</cols>
      </table>
      <simple-id uuid='{E63D0966-F1D4-48B1-9D25-BF678E8CBDD4}' />
    </worksheet>
    <worksheet name='KPI 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Times New Roman'>Top 5 tariffs in the last week and growth rate for each of them.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (1))' name='federated.1nslhmd1v3kd741h8m3xk0w0nakk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Total_Revenue' caption='KPI List: ' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total_Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Total_Revenue&quot;' />
              <aliases>
                <alias key='&quot;MB of Usage&quot;' value='MB of Usage' />
                <alias key='&quot;Minutes of Usage&quot;' value='Minutes of Usage' />
                <alias key='&quot;Off-net Minutes of Usage&quot;' value='Off-net Minutes of Usage' />
                <alias key='&quot;On-net Minutes of Usage&quot;' value='On-net Minutes of Usage' />
                <alias key='&quot;Total_Revenue&quot;' value='Total_Revenue' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nslhmd1v3kd741h8m3xk0w0nakk'>
            <column caption='Total_Revenue' datatype='integer' name='[Calculation_1867867975417044992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue] + [Data Revenue]' />
            </column>
            <column caption='Voice Revenue' datatype='integer' name='[Calculation_1867867975419465729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue]' />
            </column>
            <column caption='KPI' datatype='integer' name='[Calculation_1867867975438581762]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == &apos;Total_Revenue&apos;&#13;&#10;    THEN [Calculation_1867867975417044992]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;Minutes of Usage&apos;&#13;&#10;    THEN [Calculation_1867867975419465729]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;On-net Minutes of Usage&apos;&#13;&#10;    then [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;Off-net Minutes of Usage&apos;&#13;&#10;    then [OffNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;MB of Usage&apos;&#13;&#10;    then [MB of Usage]&#13;&#10;END' />
            </column>
            <column caption='Growth_Rate' datatype='real' name='[Calculation_1867867975834374148]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND((SUM([Calculation_1867867975438581762]) - LOOKUP(SUM([Calculation_1867867975438581762]), -1)) / ABS(LOOKUP(SUM([Calculation_1867867975438581762]), -1)) * 100, 2)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1867867975438581762]' derivation='Sum' name='[sum:Calculation_1867867975438581762:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1867867975834374148]' derivation='User' name='[usr:Calculation_1867867975834374148:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]'>
            <groupfilter count='7' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([Date])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1867867975438581762])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]</column>
            <column>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975438581762:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[usr:Calculation_1867867975834374148:qk]' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-color' value='#e7d0d0' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='background-color' value='#e7d0d0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[usr:Calculation_1867867975834374148:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e4dfdc' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975438581762:qk]</rows>
        <cols>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]</cols>
      </table>
      <simple-id uuid='{B4CA5663-A4D8-469A-808D-EACD2A0C236C}' />
    </worksheet>
    <worksheet name='KPI 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Times New Roman' fontsize='16'>Performance in the last week</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (1))' name='federated.1nslhmd1v3kd741h8m3xk0w0nakk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Total_Revenue' caption='KPI List: ' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total_Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Total_Revenue&quot;' />
              <aliases>
                <alias key='&quot;MB of Usage&quot;' value='MB of Usage' />
                <alias key='&quot;Minutes of Usage&quot;' value='Minutes of Usage' />
                <alias key='&quot;Off-net Minutes of Usage&quot;' value='Off-net Minutes of Usage' />
                <alias key='&quot;On-net Minutes of Usage&quot;' value='On-net Minutes of Usage' />
                <alias key='&quot;Total_Revenue&quot;' value='Total_Revenue' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nslhmd1v3kd741h8m3xk0w0nakk'>
            <column caption='Total_Revenue' datatype='integer' name='[Calculation_1867867975417044992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue] + [Data Revenue]' />
            </column>
            <column caption='Voice Revenue' datatype='integer' name='[Calculation_1867867975419465729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue]' />
            </column>
            <column caption='KPI' datatype='integer' name='[Calculation_1867867975438581762]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == &apos;Total_Revenue&apos;&#13;&#10;    THEN [Calculation_1867867975417044992]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;Minutes of Usage&apos;&#13;&#10;    THEN [Calculation_1867867975419465729]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;On-net Minutes of Usage&apos;&#13;&#10;    then [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;Off-net Minutes of Usage&apos;&#13;&#10;    then [OffNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;MB of Usage&apos;&#13;&#10;    then [MB of Usage]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1867867975438581762]' derivation='Sum' name='[pcto:sum:Calculation_1867867975438581762:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1867867975438581762]' derivation='Sum' name='[sum:Calculation_1867867975438581762:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]'>
            <groupfilter count='7' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([Date])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975438581762:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[pcto:sum:Calculation_1867867975438581762:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#e7d0d0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[pcto:sum:Calculation_1867867975438581762:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e4dfdc' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975438581762:qk]</rows>
        <cols>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]</cols>
      </table>
      <simple-id uuid='{1155493C-45C6-48A1-9FF6-E4D21CC3268A}' />
    </worksheet>
    <worksheet name='KPI 5'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (1))' name='federated.1nslhmd1v3kd741h8m3xk0w0nakk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Total_Revenue' caption='KPI List: ' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total_Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Total_Revenue&quot;' />
              <aliases>
                <alias key='&quot;MB of Usage&quot;' value='MB of Usage' />
                <alias key='&quot;Minutes of Usage&quot;' value='Minutes of Usage' />
                <alias key='&quot;Off-net Minutes of Usage&quot;' value='Off-net Minutes of Usage' />
                <alias key='&quot;On-net Minutes of Usage&quot;' value='On-net Minutes of Usage' />
                <alias key='&quot;Total_Revenue&quot;' value='Total_Revenue' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nslhmd1v3kd741h8m3xk0w0nakk'>
            <column caption='Total_Revenue' datatype='integer' name='[Calculation_1867867975417044992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue] + [Data Revenue]' />
            </column>
            <column caption='Voice Revenue' datatype='integer' name='[Calculation_1867867975419465729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue]' />
            </column>
            <column caption='KPI' datatype='integer' name='[Calculation_1867867975438581762]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == &apos;Total_Revenue&apos;&#13;&#10;    THEN [Calculation_1867867975417044992]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;Minutes of Usage&apos;&#13;&#10;    THEN [Calculation_1867867975419465729]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;On-net Minutes of Usage&apos;&#13;&#10;    then [OnNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;Off-net Minutes of Usage&apos;&#13;&#10;    then [OffNet Minutes of Usage]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;MB of Usage&apos;&#13;&#10;    then [MB of Usage]&#13;&#10;END' />
            </column>
            <column caption='Growth_Rate' datatype='real' name='[Calculation_1867867975834374148]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND((SUM([Calculation_1867867975438581762]) - LOOKUP(SUM([Calculation_1867867975438581762]), -1)) / ABS(LOOKUP(SUM([Calculation_1867867975438581762]), -1)) * 100, 2)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[MB of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Minutes of Usage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column caption='TEXT (copy)' datatype='string' name='[TEXT (copy)_1867867976655167506]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Calculation_1867867975438581762]) - LOOKUP(SUM([Calculation_1867867975438581762]), -1) &gt; 0 THEN&#13;&#10;        &apos;Good news!!! &apos; + STR([Parameters].[Parameter 1]) +&apos; increased &apos; + STR(ROUND((SUM([Calculation_1867867975438581762]) - LOOKUP(SUM([Calculation_1867867975438581762]), -1)) / ABS(LOOKUP(SUM([Calculation_1867867975438581762]), -1)) * 100, 2)) + &apos;% in the last week.&apos;&#13;&#10;ELSE&#13;&#10;        &apos;ALARM!!! &apos;+ STR([Parameters].[Parameter 1]) + &apos; decreased &apos; + STR(ROUND(ABS(SUM([Calculation_1867867975438581762]) - LOOKUP(SUM([Calculation_1867867975438581762]), -1)) / ABS(LOOKUP(SUM([Calculation_1867867975438581762]), -1)) * 100, 2)) + &apos;% in the last week.&apos;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1867867975438581762]' derivation='Sum' name='[sum:Calculation_1867867975438581762:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1867867975834374148]' derivation='User' name='[usr:Calculation_1867867975834374148:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[TEXT (copy)_1867867976655167506]' derivation='User' name='[usr:TEXT (copy)_1867867976655167506:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[usr:Calculation_1867867975834374148:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975438581762:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-28#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-04#' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Date:ok]' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-28#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[:Measure Names]</column>
            <column>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='296' />
            <format attr='width' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]' value='852' />
            <format attr='height' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width-header' value='52' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[usr:TEXT (copy)_1867867976655167506:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Times New Roman' fontsize='14'>&lt;</run>
                <run fontname='Times New Roman' fontsize='14'>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[usr:TEXT (copy)_1867867976655167506:nk]</run>
                <run fontname='Times New Roman' fontsize='14'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.97751379013061523' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]</cols>
        <show-full-range>
          <column>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[KPI (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{09A6EDE5-DEF3-449A-9DB0-1DB9F79E1F68}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Times New Roman'>Portion of data revenue in the total revenue</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (1))' name='federated.1nslhmd1v3kd741h8m3xk0w0nakk' />
          </datasources>
          <datasource-dependencies datasource='federated.1nslhmd1v3kd741h8m3xk0w0nakk'>
            <column caption='Total_Revenue' datatype='integer' name='[Calculation_1867867975417044992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue] + [Data Revenue]' />
            </column>
            <column caption='Propotion' datatype='real' name='[Calculation_1867867976471527438]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue] / [Calculation_1867867975417044992] * 100' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance aggregation-param='5' column='[Calculation_1867867976471527438]' derivation='Percentile' name='[prc5:Calculation_1867867976471527438:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='196' />
            <format attr='text-format' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[prc5:Calculation_1867867976471527438:qk]' value='' />
            <format attr='height' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]' value='22' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#dcddd4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[prc5:Calculation_1867867976471527438:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{42850AE7-3A17-4C1C-924A-AB621656711B}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Which tariff has the highest revenue on January, 2020? &#10;Answer : Tariff 1</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (1))' name='federated.1nslhmd1v3kd741h8m3xk0w0nakk' />
          </datasources>
          <datasource-dependencies datasource='federated.1nslhmd1v3kd741h8m3xk0w0nakk'>
            <column caption='Total_Revenue' datatype='integer' name='[Calculation_1867867975417044992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue] + [Data Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1867867975417044992]' derivation='Sum' name='[rank:sum:Calculation_1867867975417044992:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_1867867975417044992]' derivation='Sum' name='[sum:Calculation_1867867975417044992:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[mn:Date:ok]'>
            <groupfilter function='member' level='[mn:Date:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[yr:Date:ok]</column>
            <column>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[mn:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[rank:sum:Calculation_1867867975417044992:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975417044992:qk]</rows>
        <cols>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]</cols>
      </table>
      <simple-id uuid='{83983BA3-5210-4E8A-AEDF-68B540AD7183}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Which tariff has the highest data revenue growth in last month?&#10;Answer: Tariff11</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (1))' name='federated.1nslhmd1v3kd741h8m3xk0w0nakk' />
          </datasources>
          <datasource-dependencies datasource='federated.1nslhmd1v3kd741h8m3xk0w0nakk'>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[pcdf:sum:Data Revenue:qk:11]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[Date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-06#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-07#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-10#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-11#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-12#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-13#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-14#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-17#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-18#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-19#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-20#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-21#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-24#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-25#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-26#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-27#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-28#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-03#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-04#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[pcdf:sum:Data Revenue:qk:11]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk] / [federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok])</rows>
        <cols>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Data Revenue:qk]</cols>
      </table>
      <simple-id uuid='{5B778E2E-B76C-4AD6-98E4-6D582C67EDA3}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <layout-options>
        <title>
          <formatted-text>
            <run>For which tariff data revenue is higher than other types of revenue?  &#10;Answer: Tariff13</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (1))' name='federated.1nslhmd1v3kd741h8m3xk0w0nakk' />
          </datasources>
          <datasource-dependencies datasource='federated.1nslhmd1v3kd741h8m3xk0w0nakk'>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OffNet Revenue]' derivation='Sum' name='[sum:OffNet Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OnNet Revenue]' derivation='Sum' name='[sum:OnNet Revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:OnNet Revenue:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Data Revenue:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:OffNet Revenue:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1974033117294312' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:OnNet Revenue:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Data Revenue:qk] + ([federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:OffNet Revenue:qk] + [federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:OnNet Revenue:qk]))</rows>
        <cols>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]</cols>
      </table>
      <simple-id uuid='{9C3DF550-96D8-4C16-AD19-9C9C1225348E}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Times New Roman' fontsize='16'>Total revenue</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (1))' name='federated.1nslhmd1v3kd741h8m3xk0w0nakk' />
          </datasources>
          <datasource-dependencies datasource='federated.1nslhmd1v3kd741h8m3xk0w0nakk'>
            <column caption='Total_Revenue' datatype='integer' name='[Calculation_1867867975417044992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue] + [Data Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1867867975417044992]' derivation='Sum' name='[sum:Calculation_1867867975417044992:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
            <format attr='width' value='227' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#dcddd4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975417044992:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Times New Roman' fontsize='15'>Total Revenue </run>
                <run>Æ&#10;&#10;</run>
                <run fontname='Times New Roman' fontsize='15'>&lt;[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975417044992:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.1094474792480469' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FC5D3C12-909E-4DE3-8ADB-C9E989FCC7EA}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Times New Roman' fontsize='16'>Revenue proportion of each tariff</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (1))' name='federated.1nslhmd1v3kd741h8m3xk0w0nakk' />
          </datasources>
          <datasource-dependencies datasource='federated.1nslhmd1v3kd741h8m3xk0w0nakk'>
            <column caption='Total_Revenue' datatype='integer' name='[Calculation_1867867975417044992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue] + [Data Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1867867975417044992]' derivation='Sum' name='[pcto:sum:Calculation_1867867975417044992:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1867867975417044992]' derivation='Sum' name='[sum:Calculation_1867867975417044992:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='636' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#dcddd4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]' />
              <size column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975417044992:qk]' />
              <text column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]' />
              <text column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[pcto:sum:Calculation_1867867975417044992:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7D83F4A8-A924-48A0-89B5-47FE885BAC14}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Times New Roman'>Compare tariffs on daily basis for: &lt;</run>
            <run fontname='Times New Roman'>[Parameters].[Parameter 2]</run>
            <run fontname='Times New Roman'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (1))' name='federated.1nslhmd1v3kd741h8m3xk0w0nakk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Average Data Revenue Per Subscriber' caption='Subscriber' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
              <aliases>
                <alias key='1' value='Average Revenue Per Subscriber' />
                <alias key='2' value='Average Voice Revenue Per Subscriber' />
                <alias key='3' value='Average Data Revenue Per Subscriber' />
                <alias key='4' value='Average On-net Revenue Per Subscriber' />
                <alias key='5' value='Average Off-net Revenue Per Subscriber' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nslhmd1v3kd741h8m3xk0w0nakk'>
            <column caption='Total_Revenue' datatype='integer' name='[Calculation_1867867975417044992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue] + [Data Revenue]' />
            </column>
            <column caption='Voice Revenue' datatype='integer' name='[Calculation_1867867975419465729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue]' />
            </column>
            <column caption='Average Revenue Per Subscriber ' datatype='real' name='[Calculation_1867867976150171655]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1867867975417044992]/ ([Number of OffNet Subscribers] + [Number of OnNet Subscribers] )' />
            </column>
            <column caption='Average Voice Revenue Per Subscriber' datatype='real' name='[Calculation_1867867976151027720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1867867975419465729] / [Number of Voice Subscribers]' />
            </column>
            <column caption='Average Data Revenue Per Subscriber' datatype='real' name='[Calculation_1867867976151552009]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Data Revenue]/[Number of Data subscribers]' />
            </column>
            <column caption='Average On-net Revenue Per Subscriber' datatype='real' name='[Calculation_1867867976151715850]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OnNet Revenue]/[Number of OnNet Subscribers]' />
            </column>
            <column caption='Average Off-net Revenue Per Subscriber ' datatype='real' name='[Calculation_1867867976151801867]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] / [Number of OffNet Subscribers]' />
            </column>
            <column caption='Revenue' datatype='real' name='[Calculation_1867867976467501068]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 2] == 1&#13;&#10;    THEN [Calculation_1867867976150171655]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == 2&#13;&#10;    THEN [Calculation_1867867976151027720]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == 3&#13;&#10;    then [Calculation_1867867976151552009]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == 4&#13;&#10;    then [Calculation_1867867976151715850]&#13;&#10;ELSEIF [Parameters].[Parameter 2] == 5&#13;&#10;    then [Calculation_1867867976151801867]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Data subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of OffNet Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of OnNet Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Voice Subscribers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1867867976467501068]' derivation='Sum' name='[sum:Calculation_1867867976467501068:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867976467501068:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f7f0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#dcddd4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867976467501068:qk]</rows>
        <cols>([federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk] / [federated.1nslhmd1v3kd741h8m3xk0w0nakk].[dy:Date:ok])</cols>
      </table>
      <simple-id uuid='{B069B199-F508-4632-845A-306775463639}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Times New Roman' fontsize='16'>Cluster of tariffs for the voice and data revenue.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (1))' name='federated.1nslhmd1v3kd741h8m3xk0w0nakk' />
          </datasources>
          <datasource-dependencies datasource='federated.1nslhmd1v3kd741h8m3xk0w0nakk'>
            <column caption='Voice Revenue' datatype='integer' name='[Calculation_1867867975419465729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1867867975419465729]' derivation='Sum' name='[sum:Calculation_1867867975419465729:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f7f0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='5' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#dcddd4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;Sheet name=&quot;Sheet 9&quot; maxwidth=&quot;300&quot; maxheight=&quot;300&quot; filter=&quot;&lt;All Fields&gt;&quot;&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Data Revenue:qk]</rows>
        <cols>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975419465729:qk]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{1B87A74E-61A0-4D4F-8D44-8E651D99A0BA}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data+ (Performance Analysis (1))' name='federated.1nslhmd1v3kd741h8m3xk0w0nakk' />
          </datasources>
          <datasource-dependencies datasource='federated.1nslhmd1v3kd741h8m3xk0w0nakk'>
            <column caption='Voice Revenue' datatype='integer' name='[Calculation_1867867975419465729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[OffNet Revenue] + [OnNet Revenue]' />
            </column>
            <column datatype='integer' name='[Data Revenue]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OffNet Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[OnNet Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1867867975419465729]' derivation='Sum' name='[sum:Calculation_1867867975419465729:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data Revenue]' derivation='Sum' name='[sum:Data Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[Tooltip (Name)]'>
            <groupfilter function='level-members' level='[Name]' user:ui-action-filter='[Action - Sheet 9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[Tooltip (Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975419465729:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975419465729:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Data Revenue:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Data Revenue:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975419465729:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Data Revenue:qk] + [federated.1nslhmd1v3kd741h8m3xk0w0nakk].[sum:Calculation_1867867975419465729:qk])</rows>
        <cols>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{5F95E40C-E99E-4A3F-9FA5-FB0E7966B9E6}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='KPI analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='22'>Weekly KPI performance Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f0ef' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#e7d0d0' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='border-style' value='solid' />
          <format attr='border-color' value='#ddc6c6' />
          <format attr='border-width' value='2' />
          <format attr='background-color' value='#e7d0d0' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Total_Revenue' caption='KPI List: ' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total_Revenue&quot;'>
          <calculation class='tableau' formula='&quot;Total_Revenue&quot;' />
          <aliases>
            <alias key='&quot;MB of Usage&quot;' value='MB of Usage' />
            <alias key='&quot;Minutes of Usage&quot;' value='Minutes of Usage' />
            <alias key='&quot;Off-net Minutes of Usage&quot;' value='Off-net Minutes of Usage' />
            <alias key='&quot;On-net Minutes of Usage&quot;' value='On-net Minutes of Usage' />
            <alias key='&quot;Total_Revenue&quot;' value='Total_Revenue' />
          </aliases>
          <members>
            <member alias='Total_Revenue' value='&quot;Total_Revenue&quot;' />
            <member alias='Minutes of Usage' value='&quot;Minutes of Usage&quot;' />
            <member alias='On-net Minutes of Usage' value='&quot;On-net Minutes of Usage&quot;' />
            <member alias='Off-net Minutes of Usage' value='&quot;Off-net Minutes of Usage&quot;' />
            <member alias='MB of Usage' value='&quot;MB of Usage&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='5' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='8' param='vert' type='layout-flow' w='99036' x='482' y='929'>
            <zone h='5691' id='9' type='title' w='99036' x='482' y='929'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92451' id='6' type='layout-basic' w='99036' x='482' y='6620' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='37166' id='3' name='KPI 2' w='92224' x='4039' y='17305' />
        <zone custom-title='true' h='8014' id='4' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='13201' x='4039' y='8130'>
          <formatted-text>
            <run fontname='Times New Roman' fontsize='16'>KPI List:</run>
            <run>Æ </run>
          </formatted-text>
        </zone>
        <zone h='40999' id='10' name='KPI 3' w='42495' x='4099' y='56446' />
        <zone h='40883' id='11' name='KPI 4' w='48222' x='47981' y='56446' />
        <zone h='9292' id='20' name='KPI 5' w='51417' x='19349' y='7085' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='22'>Weekly KPI performance Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='37' param='vert' type='layout-flow' w='99036' x='482' y='929'>
                <zone h='5691' id='9' type='title' w='99036' x='482' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='74' h='9292' id='20' is-fixed='true' name='KPI 5' w='51417' x='19349' y='7085'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='8014' id='4' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='13201' x='4039' y='8130'>
                  <formatted-text>
                    <run fontname='Times New Roman' fontsize='16'>KPI List:</run>
                    <run>Æ </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37166' id='3' is-fixed='true' name='KPI 2' w='92224' x='4039' y='17305'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40999' id='10' is-fixed='true' name='KPI 3' w='42495' x='4099' y='56446'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40883' id='11' is-fixed='true' name='KPI 4' w='48222' x='47981' y='56446'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B60B8DE4-83E5-4C4D-8CCE-37BD3880E389}' />
    </dashboard>
    <dashboard name='Performance analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='20'>Daily Revenue PerformanceAnalysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f0f1e8' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#dcddd4' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='background-color' value='#dcddd4' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Average Data Revenue Per Subscriber' caption='Subscriber' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='3'>
          <calculation class='tableau' formula='3' />
          <aliases>
            <alias key='1' value='Average Revenue Per Subscriber' />
            <alias key='2' value='Average Voice Revenue Per Subscriber' />
            <alias key='3' value='Average Data Revenue Per Subscriber' />
            <alias key='4' value='Average On-net Revenue Per Subscriber' />
            <alias key='5' value='Average Off-net Revenue Per Subscriber' />
          </aliases>
          <members>
            <member alias='Average Revenue Per Subscriber' value='1' />
            <member alias='Average Voice Revenue Per Subscriber' value='2' />
            <member alias='Average Data Revenue Per Subscriber' value='3' />
            <member alias='Average On-net Revenue Per Subscriber' value='4' />
            <member alias='Average Off-net Revenue Per Subscriber' value='5' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='11' param='horz' type='layout-flow' w='99036' x='482' y='929'>
            <zone h='98142' id='5' param='vert' type='layout-flow' w='99036' x='482' y='929'>
              <zone h='5226' id='7' type='title' w='99036' x='482' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='16144' id='8' name='Sheet 5' show-title='false' w='13984' x='40084' y='7317' />
        <zone h='60395' id='9' name='Sheet 6' w='40446' x='784' y='6620' />
        <zone h='30894' id='12' name='Sheet 7' w='97709' x='603' y='68293' />
        <zone custom-title='true' h='8711' id='13' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='13683' x='55756' y='7433'>
          <formatted-text>
            <run fontname='Times New Roman' fontsize='18'>Subscriber</run>
          </formatted-text>
        </zone>
        <zone h='49013' id='14' name='Sheet 8' w='40506' x='40145' y='18002' />
        <zone h='49361' id='17' name='Sheet 10' w='16938' x='81857' y='8595' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='20'>Daily Revenue PerformanceAnalysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='40' param='vert' type='layout-flow' w='99036' x='482' y='929'>
                <zone h='5226' id='7' type='title' w='99036' x='482' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60395' id='9' is-fixed='true' name='Sheet 6' w='40446' x='784' y='6620'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='129' h='16144' id='8' is-fixed='true' name='Sheet 5' show-title='false' w='13984' x='40084' y='7317'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='8711' id='13' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='13683' x='55756' y='7433'>
                  <formatted-text>
                    <run fontname='Times New Roman' fontsize='18'>Subscriber</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49361' id='17' is-fixed='true' name='Sheet 10' w='16938' x='81857' y='8595'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49013' id='14' is-fixed='true' name='Sheet 8' w='40506' x='40145' y='18002'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='30894' id='12' is-fixed='true' name='Sheet 7' w='97709' x='603' y='68293'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1C59BDF7-8BEA-43B0-A62B-0C37CD2F06D8}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='KPI 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Calculation_1867867975438581762:ok]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9B32D06-DE50-4A2E-B78A-3139C8C88298}' />
    </window>
    <window class='worksheet' name='KPI 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Calculation_1867867975443456003:nk]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:qk]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[tdy:Date:ok]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CBA12564-7634-468E-93F5-A8152078161D}' />
    </window>
    <window class='worksheet' name='KPI 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{086B14C9-7394-49F6-8B65-78BF45F89145}' />
    </window>
    <window class='worksheet' name='KPI 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[usr:Calculation_1867867976141783045:nk:2]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[usr:Calculation_1867867976141783045:nk]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[usr:Calculation_1867867976649273360:nk]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[usr:Calculation_1867867976685715475:nk]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[usr:TEXT (copy)_1867867976655167506:nk]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C45FA0E-0029-4C68-AEA6-A7EECE4CF81A}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{FB13CECF-A49B-477E-A1E8-77FC3FAFF6A9}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78BB427A-F053-498F-A18D-C00DC14FE1C4}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[dy:Date:ok]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D74DA6C6-28BD-4A98-9FC1-DF919483D695}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7F6EA88-17A9-495B-AE7A-75E3531367EA}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D3BC00CE-A445-4224-915F-1ECCE3BB15DB}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{64D2DE26-2407-48B7-BB5D-C530BA6DB5DE}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{04D863DA-B488-4AC7-AF74-EF82491513AB}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Date:ok]</field>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75C604BF-F8E6-4854-B015-292F400C3D50}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nslhmd1v3kd741h8m3xk0w0nakk].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C162D71-3CF1-4F81-A287-6586E31B5B1C}' />
    </window>
    <window class='dashboard' name='KPI analysis'>
      <viewpoints>
        <viewpoint name='KPI 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI 5' />
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{D20F66B0-F658-49FD-ABE7-1FB00DBE79B8}' />
    </window>
    <window class='dashboard' name='Performance analysis'>
      <viewpoints>
        <viewpoint name='Sheet 10' />
        <viewpoint name='Sheet 5' />
        <viewpoint name='Sheet 6' />
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 8'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{813D802B-281E-4FAA-9FF1-68B9DB488927}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='KPI 2' width='192'>
      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
      AeMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='KPI 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAC/0lEQVR4nO3dsY7rVABF0Xs9yUgIKiTE//8bonlfMON5NgVVhJ9Eg4281yrT5BTZsZ0i
      d+77vg8ImnPO5eoRcCUBkCYA0gRA2mEAn5+fZ++ASxwG4IchKtwCkSYA0gRAmgBIEwBpAiBN
      AKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRA
      2uPoxX3fx7quZ2+B07kCkHZ4BZhzjufzefYWON1hAEfW9XOME/81/e3xGMviAsV/618H8O3P
      P049N+DX334fP/38y2nvR5OvWNIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCk
      CYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoA
      SBMAaQIgTQCkCYA0AZB2eFD2tm3j4+Pj7C0v1nUdy8UbuL/DAJZlGc/n8+wtLx6Px+UbuL/D
      AMb4O4IrzTkv38D9+YSRJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQdnhS/L7vY13Xs7e8+Pr+/fIN3N9hAGOMMec8c8c/LHNevoH7Owxgzjke
      jx+2cYplWS7fwP15BiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRAmgBIEwBpAiDt8Cj2fd/H19fX2VtebNt2+Qbu74cBbNt29pYX2/9gA/d3GMCyLOP9/f3s
      LS8eb2+Xb+D+PAOQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIO0vdcpKnuNOJFYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='KPI 4' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='66' name='KPI 5' width='192'>
      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
      jdBqtbh48SL27duHP/74A9u3b8eTJ08QERFhNtL26dMH586dw1tvvYVZs2bxuzit1318fKBW
      q812d06fPo39+/fD3t4eLi4uqK2tRVxcHPr164cFCxbw9zl9+jRWr16NnJwcBAYGmoRCRqMR
      X331FXbu3Inq6mozAd27dw+RkZE4duwY3N3dOzzhfZHm5mYcPXoUWq0WHMfBy8sLzs7OZr70
      6NEDw4YNQ15eHvLz88FxHDw9PWEwGLB161ZUVFTgyy+/5BfyIpEIeXl5uH79OmpqalBYWAiO
      4zBgwACkp6ejoKAADQ0NyMvLw759+6DX61FXVweRSIRr165h7Nix0Ov1SExMRFVV1TObSEcy
      7YSzWVlZOHz4MEpLS1FXVwcA/AtxSqUSs2fPxpgxY8wWiSUlJfjxxx9x5coVGI1GDBgwAGFh
      YQgODjbL25nDklY4jkNycjK2b9+OqqoqKBQKREREoKKiApmZmVi4cCH8/Pws7nCwLIvIyEgU
      FRXx12QyGWJiYhAfH292vfWlLo7jcOrUKezYsQMVFRUQi8WYNm0ali5danEhyXEcNm7ciMDA
      QJOT9Laut7J27Vrk5+ejrq4OTU1N/H2WLFmC3r178/le5ctwz9PWi3HtvQBXX1+PHTt2IDU1
      FXq9Hra2tlCr1Vi8eLGJT8CzhfOaNWtQU1OD0NBQhIaGAgB27dqF33//HQzDYPbs2YiMjMTB
      gwcRHx+PwMBArFmzBqWlpViyZIlJFEF/I4wiaATz9wAUiiWoACiChgqAImioACiChgqAImio
      ACiChgqAImioACiChgqAImioACiChgqAImioACiChgqAImioACiChgqAImioACiChgqAImio
      ACiChgqAImioACiC5v8A15oGB29b4/EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='KPI analysis' width='192'>
      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
      +P8DqMzvumEAoegAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Performance analysis' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
      2JoEQNjaPwMELZqy/Gk/AgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
      /IhCkPMbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='82' name='Sheet 5' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
